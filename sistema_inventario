import json

# Clase Producto
class Producto:
    def __init__(self, id_producto, nombre, cantidad, precio):
        self.id_producto = id_producto
        self.nombre = nombre
        self.cantidad = cantidad
        self.precio = precio

    def to_dict(self):
        return {
            "id_producto": self.id_producto,
            "nombre": self.nombre,
            "cantidad": self.cantidad,
            "precio": self.precio
        }

    @staticmethod
    def from_dict(data):
        return Producto(data["id_producto"], data["nombre"], data["cantidad"], data["precio"])

    def __str__(self):
        return f"ID: {self.id_producto}, Nombre: {self.nombre}, Cantidad: {self.cantidad}, Precio: {self.precio}"

# Clase Inventario
class Inventario:
    def __init__(self):
        self.productos = {}
        self.cargar_desde_archivo()

    def agregar_producto(self, producto):
        if producto.id_producto in self.productos:
            print("Error: ID de producto ya existente.")
            return
        self.productos[producto.id_producto] = producto
        self.guardar_en_archivo()
        print("Producto agregado correctamente.")

    def eliminar_producto(self, id_producto):
        if id_producto in self.productos:
            del self.productos[id_producto]
            self.guardar_en_archivo()
            print("Producto eliminado correctamente.")
        else:
            print("Error: Producto no encontrado.")

    def actualizar_producto(self, id_producto, cantidad=None, precio=None):
        if id_producto in self.productos:
            producto = self.productos[id_producto]
            if cantidad is not None:
                producto.cantidad = cantidad
            if precio is not None:
                producto.precio = precio
            self.guardar_en_archivo()
            print("Producto actualizado correctamente.")
        else:
            print("Error: Producto no encontrado.")

    def buscar_producto(self, nombre):
        productos_encontrados = [p for p in self.productos.values() if nombre.lower() in p.nombre.lower()]
        return productos_encontrados

    def mostrar_productos(self):
        if not self.productos:
            print("No hay productos en el inventario.")
        for p in self.productos.values():
            print(p)

    def guardar_en_archivo(self):
        with open("inventario.json", "w") as archivo:
            json.dump([p.to_dict() for p in self.productos.values()], archivo)

    def cargar_desde_archivo(self):
        try:
            with open("inventario.json", "r") as archivo:
                datos = json.load(archivo)
                self.productos = {p["id_producto"]: Producto.from_dict(p) for p in datos}
        except FileNotFoundError:
            self.productos = {
                "33": Producto("33", "CAMARA", 45, 500),
                "45": Producto("45", "CELULAR", 15, 100),
                "11": Producto("11", "PENDRIVE", 20, 15),
                "18": Producto("18", "CABLES", 80, 9.50),
                "01": Producto("01", "COMPUTADORAS", 26, 4500),
                "58": Producto("58", "LAPTO", 19, 2500)
            }
            self.guardar_en_archivo()

# Menú interactivo
def menu():
    inventario = Inventario()
    while True:
        print("\n1. Agregar producto")
        print("2. Eliminar producto")
        print("3. Actualizar producto")
        print("4. Buscar producto")
        print("5. Mostrar todos los productos")
        print("6. Salir")
        opcion = input("Seleccione una opción: ")
        
        if opcion == "1":
            id_producto = input("ID: ")
            nombre = input("Nombre: ")
            cantidad = int(input("Cantidad: "))
            precio = float(input("Precio: "))
            producto = Producto(id_producto, nombre, cantidad, precio)
            inventario.agregar_producto(producto)
        
        elif opcion == "2":
            id_producto = input("Ingrese el ID del producto a eliminar: ")
            inventario.eliminar_producto(id_producto)
        
        elif opcion == "3":
            id_producto = input("Ingrese el ID del producto a actualizar: ")
            cantidad = input("Nueva cantidad (dejar vacío para no cambiar): ")
            precio = input("Nuevo precio (dejar vacío para no cambiar): ")
            cantidad = int(cantidad) if cantidad else None
            precio = float(precio) if precio else None
            inventario.actualizar_producto(id_producto, cantidad, precio)
        
        elif opcion == "4":
            nombre = input("Ingrese el nombre del producto a buscar: ")
            productos = inventario.buscar_producto(nombre)
            if productos:
                for p in productos:
                    print(p)
            else:
                print("No se encontraron productos.")
        
        elif opcion == "5":
            inventario.mostrar_productos()
        
        elif opcion == "6":
            print("Saliendo del sistema.")
            break
        
        else:
            print("Opción no válida. Intente de nuevo.")

if __name__ == "__main__":
    menu()
