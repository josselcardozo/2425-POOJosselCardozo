import json
import os

class Inventario:
    def __init__(self, archivo="inventario.txt"):
        self.archivo = archivo
        self.productos = self.cargar_inventario()

    def cargar_inventario(self):
        """Carga los productos desde el archivo de inventario si existe, de lo contrario devuelve un diccionario vac√≠o."""
        try:
            if not os.path.exists(self.archivo):
                return {}
            with open(self.archivo, "r", encoding="utf-8") as f:
                return json.load(f)
        except (FileNotFoundError, json.JSONDecodeError):
            print("‚ö†Ô∏è Advertencia: Archivo de inventario no encontrado o est√° corrupto. Se crear√° uno nuevo.")
            return {}
        except PermissionError:
            print("‚ùå Error: No tienes permisos para acceder al archivo.")
            return {}

    def guardar_inventario(self):
        """Guarda los productos en el archivo de inventario."""
        try:
            with open(self.archivo, "w", encoding="utf-8") as f:
                json.dump(self.productos, f, indent=4)
        except PermissionError:
            print("‚ùå Error: No tienes permisos para escribir en el archivo.")

    def agregar_producto(self, nombre, cantidad, precio):
        """A√±ade un producto al inventario y lo guarda en el archivo."""
        if nombre in self.productos:
            print(f"‚ö†Ô∏è El producto '{nombre}' ya existe en el inventario.")
            return
        self.productos[nombre] = {"cantidad": cantidad, "precio": precio}
        self.guardar_inventario()
        print(f"‚úÖ Producto '{nombre}' a√±adido exitosamente.")

    def actualizar_producto(self, nombre, cantidad=None, precio=None):
        """Actualiza la cantidad y/o precio de un producto existente."""
        if nombre not in self.productos:
            print(f"‚ö†Ô∏è El producto '{nombre}' no existe en el inventario.")
            return
        if cantidad is not None:
            self.productos[nombre]["cantidad"] = cantidad
        if precio is not None:
            self.productos[nombre]["precio"] = precio
        self.guardar_inventario()
        print(f"‚úÖ Producto '{nombre}' actualizado exitosamente.")

    def eliminar_producto(self, nombre):
        """Elimina un producto del inventario."""
        if nombre not in self.productos:
            print(f"‚ö†Ô∏è El producto '{nombre}' no existe en el inventario.")
            return
        del self.productos[nombre]
        self.guardar_inventario()
        print(f"‚úÖ Producto '{nombre}' eliminado exitosamente.")

    def mostrar_inventario(self):
        """Muestra todos los productos en el inventario."""
        if not self.productos:
            print("üì¶ El inventario est√° vac√≠o.")
        else:
            print("üìã Inventario Actual:")
            for nombre, datos in self.productos.items():
                print(f"- {nombre}: {datos['cantidad']} unidades, ${datos['precio']} cada uno")

# Ejemplo de uso
if __name__ == "__main__":
    inventario = Inventario()
    inventario.mostrar_inventario()
    inventario.agregar_producto("Laptop", 10, 750.00)
    inventario.actualizar_producto("Laptop", precio=700.00)
    inventario.eliminar_producto("Laptop")
    inventario.mostrar_inventario()
